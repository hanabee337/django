From 17119948583f666a17a925c3e2b65e7d5d335f09 Mon Sep 17 00:00:00 2001
From: hanabee337 <hanabee337@gmail.com>
Date: Mon, 13 Feb 2017 12:34:28 +0900
Subject: [PATCH 2/3] =?UTF-8?q?num=20=EA=B0=AF=EC=88=98=EB=A7=8C=ED=81=BC?=
 =?UTF-8?q?=20User1~User<num>=20=EA=B9=8C=EC=A7=80=20=EC=9E=84=EC=9D=98?=
 =?UTF-8?q?=EC=9D=98=20=EC=9C=A0=EC=A0=80=EB=A5=BC=20=EC=83=9D=EC=84=B1?=
 =?UTF-8?q?=ED=95=9C=EB=8B=A4.?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: hanabee337 <hanabee337@gmail.com>
---
 .../member/migrations/0002_auto_20170213_0319.py   | 40 ++++++++++++++++++++++
 .../member/migrations/0003_auto_20170213_0330.py   | 25 ++++++++++++++
 .../member/migrations/0004_auto_20170213_0333.py   | 20 +++++++++++
 django_app/member/models.py                        | 37 +++++++++++++++++---
 4 files changed, 117 insertions(+), 5 deletions(-)
 create mode 100644 django_app/member/migrations/0002_auto_20170213_0319.py
 create mode 100644 django_app/member/migrations/0003_auto_20170213_0330.py
 create mode 100644 django_app/member/migrations/0004_auto_20170213_0333.py

diff --git a/django_app/member/migrations/0002_auto_20170213_0319.py b/django_app/member/migrations/0002_auto_20170213_0319.py
new file mode 100644
index 0000000..043c788
--- /dev/null
+++ b/django_app/member/migrations/0002_auto_20170213_0319.py
@@ -0,0 +1,40 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.10.5 on 2017-02-13 03:19
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('member', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='myuser',
+            name='date_joined',
+            field=models.DateTimeField(auto_now_add=True),
+        ),
+        migrations.AlterField(
+            model_name='myuser',
+            name='email',
+            field=models.EmailField(blank=True, max_length=254, verbose_name='이메일'),
+        ),
+        migrations.AlterField(
+            model_name='myuser',
+            name='following',
+            field=models.ManyToManyField(blank=True, to='member.MyUser'),
+        ),
+        migrations.AlterField(
+            model_name='myuser',
+            name='nickname',
+            field=models.CharField(max_length=24, verbose_name='닉네임'),
+        ),
+        migrations.AlterField(
+            model_name='myuser',
+            name='username',
+            field=models.CharField(max_length=200, unique=True),
+        ),
+    ]
diff --git a/django_app/member/migrations/0003_auto_20170213_0330.py b/django_app/member/migrations/0003_auto_20170213_0330.py
new file mode 100644
index 0000000..ab8725d
--- /dev/null
+++ b/django_app/member/migrations/0003_auto_20170213_0330.py
@@ -0,0 +1,25 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.10.5 on 2017-02-13 03:30
+from __future__ import unicode_literals
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('member', '0002_auto_20170213_0319'),
+    ]
+
+    operations = [
+        migrations.RenameField(
+            model_name='myuser',
+            old_name='nickname',
+            new_name='nick_name',
+        ),
+        migrations.AlterField(
+            model_name='myuser',
+            name='username',
+            field=models.CharField(max_length=200, unique=True, verbose_name='유저네임'),
+        ),
+    ]
diff --git a/django_app/member/migrations/0004_auto_20170213_0333.py b/django_app/member/migrations/0004_auto_20170213_0333.py
new file mode 100644
index 0000000..afecc0d
--- /dev/null
+++ b/django_app/member/migrations/0004_auto_20170213_0333.py
@@ -0,0 +1,20 @@
+# -*- coding: utf-8 -*-
+# Generated by Django 1.10.5 on 2017-02-13 03:33
+from __future__ import unicode_literals
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('member', '0003_auto_20170213_0330'),
+    ]
+
+    operations = [
+        migrations.RenameField(
+            model_name='myuser',
+            old_name='nick_name',
+            new_name='nickname',
+        ),
+    ]
diff --git a/django_app/member/models.py b/django_app/member/models.py
index cd893ed..24594ea 100644
--- a/django_app/member/models.py
+++ b/django_app/member/models.py
@@ -1,4 +1,4 @@
-from django.db import models
+from django.db import models, IntegrityError
 
 
 # from django.contrib.auth import
@@ -6,19 +6,46 @@ from django.db import models
 # Create your models here.
 
 class MyUser(models.Model):
-    username = models.CharField(max_length=200,
+    username = models.CharField('유저네임', max_length=200,
                                 unique=True)
     last_name = models.CharField(max_length=200)
     first_name = models.CharField(max_length=200)
-    nickname = models.CharField(max_length=200)
-    email = models.EmailField()
-    date_joined = models.DateTimeField(auto_created=True)
+    nickname = models.CharField('닉네임', max_length=24)
+    email = models.EmailField('이메일', blank=True)
+    date_joined = models.DateTimeField(auto_now_add=True)
     last_modified = models.DateTimeField(auto_now_add=True)
 
     following = models.ManyToManyField(
         'self',
         symmetrical=False,
+        blank=True,
     )
 
     def __str__(self):
         return self.username
+
+    @staticmethod
+    def create_dummy_user(num):
+        """
+        num 갯수만큼 User1~User<num>까지 임의의 유저를 생성한다.
+        :return: 생성된 유저 수
+        """
+        import random
+        last_name_list = ['방', '이', '김', '최']
+        first_name_list = ['민아', '혜리', '수아', '소영']
+        nickname_list = ['만득', '노랭', '우렁', '근덕']
+        created_count = 0
+
+        for i in range(num):
+            try:
+                MyUser.objects.create(
+                    username='User{}'.format(i + 1),
+                    last_name=random.choice(last_name_list),
+                    first_name=random.choice(first_name_list),
+                    nickname=random.choice(nickname_list),
+                )
+                created_count += 1
+            except IntegrityError as e:
+                print(e)
+
+        return created_count
-- 
2.7.4

